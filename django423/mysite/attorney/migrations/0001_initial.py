# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-03-26 05:13
from __future__ import unicode_literals

import django.db.models.manager
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Buy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(null=True)),
                ('purchased', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['purchased'],
                'managed': True,
            },
            managers=[
                ('buys', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['date_joined'],
                'managed': True,
            },
            managers=[
                ('employees', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('firmID',
                 models.AutoField(db_column='firmID', max_length=9, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ForState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': True,
            },
            managers=[
                ('legals_states', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': True,
            },
            managers=[
                ('people_states', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Legal',
            fields=[
                ('legalID',
                 models.AutoField(db_column='legalID', max_length=9, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=45, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_column='Created', null=True)),
                ('updated', models.DateTimeField(auto_now=True, db_column='LastUpdated', null=True)),
                ('tags',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True,
                                                           null=True, size=None)),
            ],
            options={
                'ordering': ['type'],
                'managed': True,
            },
            managers=[
                ('legals', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Own',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owned', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['owned'],
                'managed': True,
            },
            managers=[
                ('owns', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('personID',
                 models.AutoField(db_column='personID', max_length=9, primary_key=True, serialize=False, unique=True)),
                ('firstname', models.CharField(db_column='firstName', max_length=50)),
                ('lastname', models.CharField(db_column='lastName', max_length=50)),
                ('email', models.EmailField(db_column='emailAddress', max_length=254, unique=True)),
                ('password', models.CharField(db_column='password', max_length=20)),
                ('DOB', models.DateField(db_column='dob', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_column='created', null=True)),
                ('lastlogin', models.DateTimeField(db_column='lastLogin')),
                ('ipaddress', models.GenericIPAddressField(db_column='IPAddress', unpack_ipv4=True)),
                ('tags',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), null=True,
                                                           size=None)),
            ],
            options={
                'verbose_name_plural': 'people',
                'ordering': ['lastname'],
                'managed': True,
            },
            managers=[
                ('people', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(
                    choices=[('DC', 'District of Columbia'), ('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'),
                             ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'),
                             ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'),
                             ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'),
                             ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'),
                             ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'),
                             ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'),
                             ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'),
                             ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'),
                             ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'),
                             ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'),
                             ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'),
                             ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2, unique=True)),
            ],
            options={
                'ordering': ['state'],
                'managed': True,
            },
            managers=[
                ('states', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Use',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(null=True)),
                ('lastused', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['lastused'],
                'managed': True,
            },
            managers=[
                ('uses', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(null=True)),
                ('lastviewed', models.DateTimeField(auto_now=True)),
                ('numberOviews', models.IntegerField()),
            ],
            options={
                'ordering': ['lastviewed'],
                'managed': True,
            },
            managers=[
                ('views', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('person_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='attorney.Person')),
                ('clientdata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'managed': True,
            },
            bases=('attorney.person',),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('legal_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='attorney.Legal')),
                ('filestackURL', models.URLField(blank=True, db_column='fileStackURL', null=True, unique=True)),
            ],
            options={
                'managed': True,
            },
            bases=('attorney.legal',),
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('legal_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='attorney.Legal')),
                ('typeform',
                 django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='typeForm', null=True)),
                ('doceditor',
                 django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='docEditor', null=True)),
            ],
            options={
                'managed': True,
            },
            bases=('attorney.legal',),
        ),
        migrations.CreateModel(
            name='Lawyer',
            fields=[
                ('person_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='attorney.Person')),
                ('lawyerdata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'managed': True,
            },
            bases=('attorney.person',),
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('legal_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='attorney.Legal')),
                ('content', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='content', null=True)),
                ('piecetype', models.CharField(blank=True, db_column='pieceType', max_length=30, null=True)),
            ],
            options={
                'managed': True,
            },
            bases=('attorney.legal',),
        ),
        migrations.AddField(
            model_name='view',
            name='legal',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='attorney.Legal'),
        ),
        migrations.AddField(
            model_name='view',
            name='person',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='use',
            name='legal',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='attorney.Legal'),
        ),
        migrations.AddField(
            model_name='use',
            name='person',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='state',
            name='forState',
            field=models.ManyToManyField(related_name='item_in_state', through='attorney.ForState',
                                         to='attorney.Legal'),
        ),
        migrations.AddField(
            model_name='state',
            name='inState',
            field=models.ManyToManyField(related_name='person_in_state', through='attorney.InState',
                                         to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='own',
            name='legal',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='attorney.Legal'),
        ),
        migrations.AddField(
            model_name='own',
            name='person',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='legal',
            name='boughtby',
            field=models.ManyToManyField(related_name='someone_bought', through='attorney.Buy', to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='legal',
            name='ownedby',
            field=models.ManyToManyField(related_name='someone_owned', through='attorney.Own', to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='legal',
            name='usedby',
            field=models.ManyToManyField(related_name='someone_used', through='attorney.Use', to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='legal',
            name='viewedby',
            field=models.ManyToManyField(related_name='someone_viewed', through='attorney.View', to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='instate',
            name='person',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='instate',
            name='state',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='attorney.State'),
        ),
        migrations.AddField(
            model_name='forstate',
            name='legal',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='attorney.Legal'),
        ),
        migrations.AddField(
            model_name='forstate',
            name='state',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='attorney.State'),
        ),
        migrations.AddField(
            model_name='firm',
            name='employee',
            field=models.ManyToManyField(related_name='lawyers_in_firm', through='attorney.Employee',
                                         to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='employee',
            name='employed',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='employed_lawyer', to='attorney.Person'),
        ),
        migrations.AddField(
            model_name='employee',
            name='employer',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='employing_firm', to='attorney.Firm'),
        ),
        migrations.AddField(
            model_name='buy',
            name='legal',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='attorney.Legal'),
        ),
        migrations.AddField(
            model_name='buy',
            name='person',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='attorney.Person'),
        ),
    ]
